# Define the user and the number of worker processes
user nginx;
worker_processes auto;

# Error log settings
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Event settings
events {
    worker_connections 1024; # Maximum number of simultaneous connections
}

# HTTP settings
http {
    include /etc/nginx/mime.types;  # MIME types support
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # Load balancing configuration
    upstream myapp {
        server app_server1.example.com weight=3; # Higher weight means more requests
        server app_server2.example.com;
        server app_server3.example.com backup;  # Only used when other servers are down
    }

    # HTTPS server configuration
    server {
        listen 443 ssl;  # Listen on port 443 for SSL
        server_name www.example.com;

        # SSL settings
        ssl_certificate /etc/nginx/ssl/example.com.crt;  # Path to SSL certificate
        ssl_certificate_key /etc/nginx/ssl/example.com.key;  # Path to SSL key

        ssl_protocols TLSv1.2 TLSv1.3;  # Secure protocols
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy no-referrer-when-downgrade;

        # Reverse proxy configuration
        location / {
            proxy_pass http://myapp;  # Pass requests to the upstream block
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files served directly
        location /static/ {
            alias /var/www/example.com/static/;
            expires max;
            access_log off;
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name www.example.com;

        location / {
            return 301 https://$host$request_uri;
        }
    }
}
